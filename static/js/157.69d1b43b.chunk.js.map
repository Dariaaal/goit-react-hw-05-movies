{"version":3,"file":"static/js/157.69d1b43b.chunk.js","mappings":"uQAEMA,EAAW,8BAEXC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAqCC,GAArC,uFAC2BC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kCAA+CC,EAA/C,iCAA+EE,EAA/E,gCAD3B,cACUE,EADV,yBAEWA,EAASC,MAFpB,kEAKA,MAPA,SAEeJ,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECLf,EAAyB,0B,SCiCvB,EA/BgB,SAAC,GAAoB,IAAnBK,EAAkB,EAAlBA,aAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAPa,SAAAC,GACnBA,EAAMC,iBAENN,EAAaE,EACd,EAGC,WACE,kBACEK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAWC,EACXC,SAlBe,SAAAC,GACnBX,EAASW,EAAEC,cAAcb,MAAMc,cAChC,EAiBKd,MAAOA,KAET,mBAAQK,KAAK,SAAb,sBAKL,EC/BH,EAAuB,qBCsDvB,EAjDe,WAEX,IAAMU,GAAWC,EAAAA,EAAAA,MACjB,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCtB,EAAAA,EAAAA,UAAS,IAA/C,eAAOuB,EAAP,KAAoBC,EAApB,KAEAH,EAAaI,IAAI,YAEjBC,EAAAA,EAAAA,YAAU,WAAI,wCAQV,6GAEuBhC,EAAqB6B,GAF5C,OAEUzB,EAFV,OAGIqB,GAAU,OAAIrB,EAAK6B,UAHvB,gDAMIC,QAAQC,IAAR,MANJ,0DARU,sBAEQ,KAAhBN,IAIJD,EAAgB,CAAE3B,MAAO4B,IANb,mCAkBVO,GACH,GAAE,CAACP,EAAaD,IAMjB,OAAO,4BACP,SAAC,EAAD,CAAWvB,aALY,SAAAE,GACrBuB,EAAevB,EAChB,KAIH,wBACGiB,GAAUA,EAAOa,KAAI,SAAAC,GACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAOC,MAAO,CAACC,KAAMpB,GAAWN,UAAWC,EAA9D,SAAyEqB,EAAMK,OAASL,EAAMM,QADvFN,EAAME,GAIlB,QAIJ,C","sources":["components/api/SearchQueryMovies.js","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/components/pages/Movies/Movies.module.css?078c","components/pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nconst API_KEY = '593700439a076bb032ad3ac2a00bd9c1';\n\nasync function getSearchQueryMovies (query) {\n    const response = await axios.get(`${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`)\n    return response.data; \n}\n\nexport default getSearchQueryMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Searchbar_search__RgdH8\"};","import { useState } from \"react\";\nimport css from './Searchbar.module.css'\n\nconst Searchbar = ({handleSearch}) => {\n    const [value, setValue] = useState('');\n  \n    const handleChange = e => {\n      setValue(e.currentTarget.value.toLowerCase());\n    };\n  \n    const handleSubmit = event => {\n      event.preventDefault();\n\n      handleSearch(value);\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>  \n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          className={css.search}\n          onChange={handleChange}\n          value={value}\n        />\n        <button type=\"submit\">\n        Search\n        </button>\n      </form>\n    );\n  }\n\n  export default Searchbar;","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Movies_link__Ti9Y4\"};","import { useEffect, useState } from \"react\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport getSearchQueryMovies from \"components/api/SearchQueryMovies\";\nimport Searchbar from \"components/Searchbar/Searchbar\";\nimport css from './Movies.module.css'\n\nconst Movies = () => {\n\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [moviesQuery, setMoviesQuery] = useState('');\n\n    searchParams.get('movieId');\n\n    useEffect(()=>{\n\n      if (moviesQuery === '') {\n        return;\n      }\n\n      setSearchParams({ query: moviesQuery });\n\n        async function GetQuery(){\n           try{\n            const data = await getSearchQueryMovies(moviesQuery);\n            setMovies([...data.results]);\n           }\n           catch(error){\n            console.log(error)\n           }\n        }\n\n        GetQuery();\n    }, [moviesQuery, setSearchParams])\n\n    const onSearchSubmit = value => {\n      setMoviesQuery(value);\n    }\n\n    return <div>\n    <Searchbar handleSearch={onSearchSubmit}/>\n  <ul>\n    {movies && movies.map(movie => {\n      return (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`}  state={{from: location}} className={css.link}>{movie.title || movie.name}</Link>\n        </li>\n      )\n    })}\n  </ul>\n    </div>\n\n}\n\nexport default Movies;"],"names":["BASE_URL","API_KEY","getSearchQueryMovies","query","axios","response","data","handleSearch","useState","value","setValue","onSubmit","event","preventDefault","type","autoComplete","autoFocus","placeholder","className","css","onChange","e","currentTarget","toLowerCase","location","useLocation","movies","setMovies","useSearchParams","searchParams","setSearchParams","moviesQuery","setMoviesQuery","get","useEffect","results","console","log","GetQuery","map","movie","to","id","state","from","title","name"],"sourceRoot":""}