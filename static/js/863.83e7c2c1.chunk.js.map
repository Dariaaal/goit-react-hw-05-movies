{"version":3,"file":"static/js/863.83e7c2c1.chunk.js","mappings":"8PAEMA,EAAW,8BAEXC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,uFAC2BC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,mBAAgCG,EAAhC,oBAA8CF,EAA9C,4CAD3B,cACUI,EADV,yBAEWA,EAASC,MAFpB,kEAKA,MAPA,SAEeJ,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECLf,EAAyB,6BAAzB,EAA6D,2BAA7D,EAA+F,2BAA/F,EAAuI,iCAAvI,EAA+K,2B,SCuD/K,EAnDqB,WACnB,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAOH,EAASI,MAAQJ,EAASI,MAAMC,KAAO,WAClEC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAI,wCACZ,6GAE2BhB,EAAgBc,GAF3C,OAEcV,EAFd,OAGQG,EAAWH,GAHnB,gDAMQa,QAAQC,IAAR,MANR,0DADY,uBAAC,WAAD,wBAWZC,EACH,IAEC,IAAOC,EAAsDd,EAAtDc,YAAaC,EAAyCf,EAAzCe,OAAQC,EAAiChB,EAAjCgB,aAAcC,EAAmBjB,EAAnBiB,MAAOC,EAAYlB,EAAZkB,SACjD,OAAO,4BACL,SAAC,KAAD,CAAMC,GAAIf,EAAoBgB,QAASC,UAAWC,EAAlD,sBACA,iBAAKD,UAAWC,EAAhB,WACA,0BACA,gBAAKC,IAAKT,GAAW,8CAA2CA,GAAeU,IAAKP,EAAOI,UAAWC,OAEtG,4BACA,wBAAKL,KACL,6CAAmBD,MACnB,sCACA,uBAAIE,IACHH,IAAU,oCACX,wBACKA,GAAUA,EAAOU,KAAI,SAAAC,GAAK,OACnB,wBAAoBA,EAAMC,MAAjBD,EAAM/B,GADI,aAM/B,iBAAK0B,UAAWC,EAAhB,WACA,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMH,GAAI,OAAQE,UAAWC,EAA7B,qBACJ,yBAAI,SAAC,KAAD,CAAMH,GAAI,UAAWE,UAAWC,EAAhC,2BAER,SAAC,KAAD,SAGH,C","sources":["components/api/MovieDetails.js","webpack://react-homework-template/./src/components/pages/MovieDetails/MovieDetails.module.css?1b37","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nconst API_KEY = '593700439a076bb032ad3ac2a00bd9c1';\n\nasync function getMovieDetails (id) {\n    const response = await axios.get(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`)\n    return response.data; \n}\n\nexport default getMovieDetails;","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"MovieDetails_poster__B12ex\",\"wrap\":\"MovieDetails_wrap__eRJsI\",\"link\":\"MovieDetails_link__E3pMX\",\"additional\":\"MovieDetails_additional__TFMfw\",\"back\":\"MovieDetails_back__C3KG7\"};","import { useEffect, useState, useRef } from \"react\";\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport getMovieDetails from \"components/api/MovieDetails\";\nimport css from './MovieDetails.module.css'\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState('');\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state ? location.state.from : '/movies')\n  const { movieId } = useParams();\n\n  useEffect(()=>{\n    async function GetDetails(){\n        try{\n            const data = await getMovieDetails(movieId);\n            setDetails(data);\n        }\n        catch(error){\n            console.log(error)\n        }\n    }\n\n    GetDetails();\n})\n\n  const {poster_path, genres, vote_average, title, overview} = details;\n  return <div>\n    <Link to={backLinkLocationRef.current} className={css.back}>Go back</Link>\n    <div className={css.wrap}>\n    <div>\n    <img src={poster_path && `https://image.tmdb.org/t/p/original/${poster_path}`} alt={title} className={css.poster}/>\n    </div>\n    <div>\n    <h1>{title}</h1>\n    <p>{`User Score: ${vote_average}`}</p>\n    <h2>Overview</h2>\n    <p>{overview}</p>\n    {genres && <h2>Genres</h2>}\n    <ul>\n        {genres && genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n        ))}\n    </ul>\n    </div>\n    </div>\n    <div className={css.additional}>\n    <h3>Additional information</h3>\n    <ul>\n        <li><Link to={'cast'} className={css.link}>Cast</Link></li>\n        <li><Link to={'reviews'} className={css.link}>Reviews</Link></li>\n    </ul>\n    <Outlet/>\n    </div>\n  </div>\n}\n\nexport default MovieDetails;"],"names":["BASE_URL","API_KEY","getMovieDetails","id","axios","response","data","useState","details","setDetails","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","console","log","GetDetails","poster_path","genres","vote_average","title","overview","to","current","className","css","src","alt","map","genre","name"],"sourceRoot":""}